// This file is auto-generated by @hey-api/openapi-ts

import { client, type Options } from '@hey-api/client-fetch';
import type { AppControllerGetHelloError, AppControllerGetHelloResponse, GetZipCodeData, GetZipCodeError, GetZipCodeResponse, GetBoldFontError, GetBoldFontResponse, GetRegularFontError, GetRegularFontResponse, CreateUserData, CreateUserError, CreateUserResponse, DeleteCurrentUserError, DeleteCurrentUserResponse, UpdateCurrentUserData, UpdateCurrentUserError, UpdateCurrentUserResponse, GetCurrentUserError, GetCurrentUserResponse, GetCurrentUserProfileError, GetCurrentUserProfileResponse, GetUserExistsByEmailData, GetUserExistsByEmailError, GetUserExistsByEmailResponse, CreateCompanyData, CreateCompanyError, CreateCompanyResponse, GetCurrentCompanyError, GetCurrentCompanyResponse, UpdateCurrentCompanyData, UpdateCurrentCompanyError, UpdateCurrentCompanyResponse, GetCurrentCompanyUsersError, GetCurrentCompanyUsersResponse, CreateCurrentCompanyUserData, CreateCurrentCompanyUserError, CreateCurrentCompanyUserResponse, DeleteCurrentCompanyUserData, DeleteCurrentCompanyUserError, DeleteCurrentCompanyUserResponse, GetCurrentCompanyPaymentDetailsError, GetCurrentCompanyPaymentDetailsResponse, CreateCurrentCompanyPaymentDetailsData, CreateCurrentCompanyPaymentDetailsError, CreateCurrentCompanyPaymentDetailsResponse, UpdateCurrentCompanyPaymentDetailsData, UpdateCurrentCompanyPaymentDetailsError, UpdateCurrentCompanyPaymentDetailsResponse } from './types.gen';

export const appControllerGetHello = (options?: Options) => { return (options?.client ?? client).get<AppControllerGetHelloResponse, AppControllerGetHelloError>({
    ...options,
    url: '/'
}); };

export const getZipCode = (options: Options<GetZipCodeData>) => { return (options?.client ?? client).get<GetZipCodeResponse, GetZipCodeError>({
    ...options,
    url: '/zip-code'
}); };

export const getBoldFont = (options?: Options) => { return (options?.client ?? client).get<GetBoldFontResponse, GetBoldFontError>({
    ...options,
    url: '/fonts/bold'
}); };

export const getRegularFont = (options?: Options) => { return (options?.client ?? client).get<GetRegularFontResponse, GetRegularFontError>({
    ...options,
    url: '/fonts/regular'
}); };

export const createUser = (options: Options<CreateUserData>) => { return (options?.client ?? client).post<CreateUserResponse, CreateUserError>({
    ...options,
    url: '/users'
}); };

export const deleteCurrentUser = (options?: Options) => { return (options?.client ?? client).delete<DeleteCurrentUserResponse, DeleteCurrentUserError>({
    ...options,
    url: '/users/me'
}); };

export const updateCurrentUser = (options: Options<UpdateCurrentUserData>) => { return (options?.client ?? client).put<UpdateCurrentUserResponse, UpdateCurrentUserError>({
    ...options,
    url: '/users/me'
}); };

export const getCurrentUser = (options?: Options) => { return (options?.client ?? client).get<GetCurrentUserResponse, GetCurrentUserError>({
    ...options,
    url: '/users/me'
}); };

export const getCurrentUserProfile = (options?: Options) => { return (options?.client ?? client).get<GetCurrentUserProfileResponse, GetCurrentUserProfileError>({
    ...options,
    url: '/users/me/profile'
}); };

export const getUserExistsByEmail = (options: Options<GetUserExistsByEmailData>) => { return (options?.client ?? client).get<GetUserExistsByEmailResponse, GetUserExistsByEmailError>({
    ...options,
    url: '/users/{email}/exists'
}); };

export const createCompany = (options: Options<CreateCompanyData>) => { return (options?.client ?? client).post<CreateCompanyResponse, CreateCompanyError>({
    ...options,
    url: '/companies'
}); };

export const getCurrentCompany = (options?: Options) => { return (options?.client ?? client).get<GetCurrentCompanyResponse, GetCurrentCompanyError>({
    ...options,
    url: '/companies/my'
}); };

export const updateCurrentCompany = (options: Options<UpdateCurrentCompanyData>) => { return (options?.client ?? client).put<UpdateCurrentCompanyResponse, UpdateCurrentCompanyError>({
    ...options,
    url: '/companies/my'
}); };

export const getCurrentCompanyUsers = (options?: Options) => { return (options?.client ?? client).get<GetCurrentCompanyUsersResponse, GetCurrentCompanyUsersError>({
    ...options,
    url: '/companies/my/users'
}); };

export const createCurrentCompanyUser = (options: Options<CreateCurrentCompanyUserData>) => { return (options?.client ?? client).post<CreateCurrentCompanyUserResponse, CreateCurrentCompanyUserError>({
    ...options,
    url: '/companies/my/users'
}); };

export const deleteCurrentCompanyUser = (options: Options<DeleteCurrentCompanyUserData>) => { return (options?.client ?? client).delete<DeleteCurrentCompanyUserResponse, DeleteCurrentCompanyUserError>({
    ...options,
    url: '/companies/my/users/{userId}'
}); };

export const getCurrentCompanyPaymentDetails = (options?: Options) => { return (options?.client ?? client).get<GetCurrentCompanyPaymentDetailsResponse, GetCurrentCompanyPaymentDetailsError>({
    ...options,
    url: '/companies/my/payment-details'
}); };

export const createCurrentCompanyPaymentDetails = (options: Options<CreateCurrentCompanyPaymentDetailsData>) => { return (options?.client ?? client).post<CreateCurrentCompanyPaymentDetailsResponse, CreateCurrentCompanyPaymentDetailsError>({
    ...options,
    url: '/companies/my/payment-details'
}); };

export const updateCurrentCompanyPaymentDetails = (options: Options<UpdateCurrentCompanyPaymentDetailsData>) => { return (options?.client ?? client).put<UpdateCurrentCompanyPaymentDetailsResponse, UpdateCurrentCompanyPaymentDetailsError>({
    ...options,
    url: '/companies/my/payment-details'
}); };